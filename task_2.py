import unittest
import re


# поиск слова с двумя подряд идущими гласными
r'\b\w*[АОУЭЫИЯЕЁЮаоуэыияеёю]{2}\w*\b'

# поиск слов, с не более чем 3 согласными
r'\b(?:(?:(?:[АОУЭЫИЯЕЁЮаоуэыияеёю]*[БВГДЖЗЙКЛМНПРСТФХЦЧШЩбвгджзйклмнпрстфхцчшщ][АОУЭЫИЯЕЁЮаоуэыияеёю]*){1,3})|[АОУЭЫИЯЕЁЮаоуэыияеёю]+)\b'

# итоговое выражение
r = r'\b\w*[АОУЭЫИЯЕЁЮаоуэыияеёю]{2}\w*\b(?=\s(?:(?:(?:[АОУЭЫИЯЕЁЮаоуэыияеёю]*[БВГДЖЗЙКЛМНПРСТФХЦЧШЩбвгджзйклмнпрстфхцчшщ][АОУЭЫИЯЕЁЮаоуэыияеёю]*){1,3})|[АОУЭЫИЯЕЁЮаоуэыияеёю]+)\b)'


# Вариант: 465887 % 6 = 5
def task_2(row: str) -> int:
    return re.findall(r, row)


class TestTask2(unittest.TestCase):
    def test_1(self):
        self.assertEqual(task_2('Кривошеее существо гуляет по парку'), ['гуляет'])
    def test_2(self):
        self.assertEqual(task_2('аапп ппаа аапп'), ['аапп', 'ппаа'])
    def test_3(self):
        self.assertEqual(task_2('Кривошеее существо гуляет пппппо парку'), [])
    def test_4(self):
        self.assertEqual(task_2('ооооо ппп ооооо ооо п'), ['ооооо', 'ооооо', 'ооо'])
    def test_5(self):
        self.assertEqual(task_2('ооооо'), [])


if __name__ == "__main__":
    unittest.main()